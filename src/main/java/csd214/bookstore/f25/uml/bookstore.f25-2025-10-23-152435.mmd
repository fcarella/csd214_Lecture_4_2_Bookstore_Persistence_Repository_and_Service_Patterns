classDiagram
    Editable <|--Product
    Product <|--Ticket
    Product <|--Publication
    Publication <|-- Book
    Publication <|-- Magazine
    Magazine <|-- DiscMag
    SaleableItem <|.. Product
    Serializable <|.. Product
    Product <-- CashTill

    class Product{
        -String productId
    }

    class Serializable{
        <<interface>>
    }
    class Ticket{
        +description
        +price
        +sellItem()
    }
    class Editable{
        <<abstract>>
        -Scanner input
        +String getInput(String)
        +int getInput(int)
        +double getInput(double)
        +boolean getInput(boolean)
        +Date getInput(Date)
        +Enum getInput(Enum)
        +edit()*
        +initialize()*

    }
    class Publication{
        <<Abstract>>
        -String title
        -double price
        -int copies
        +getPrice()

        +Publication()
        +Publication(String title, double price, int copies)
        +toString()
        +equals()
        +hashCode()

    }
    class Book{
        -String author
        +edit()
        +initialize()
        +sellItem()

        +Book()
        +Book(String author)
        +Book(String author, String title, double price, int copies)
        +toString()
        +equals()
        +hashCode()

    }
    class Magazine{
        -int orderQty
        -java.util.Date currentIssue

        +Magazine()
        +Magazine(int orderQty, Date currentIssue, String title, double price, int copies)

        +edit()
        +initialize()
        +sellItem()
    }
    class DiscMag{
        -boolean hasDisc
        +edit()
        +initialize()
        +sellItem()

        +DiscMag()
        +DiscMag(boolean, hasDisc, int orderQty, Date currentIssue, String title, double price, int copies)

    }
    class CashTill{
        -double runningTotal
        +CashTill()
        +showTotal()
        +sellItem(SaleableItem item)
    }
    class SaleableItem {
        <<interface>>
        +sellItem()
        +getPrice()

    }